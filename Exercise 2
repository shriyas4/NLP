#1.	Apply similarity measures using Jaccard's Coefficient or Tanimoto coefficient

import scipy.spatial.distance as dist
Q=dist.jaccard([19, 8, 90], [50, 19, 900])
Q1=dist.jaccard([1, 0, 0], [1, 1, 0])
Q2=dist.jaccard([1, 0, 0], [1, 2, 0])
Q3=dist.jaccard([1, 0, 0], [1, 1, 1])
print (Q)
print (Q1)
print (Q2)
print (Q3)

#2.	Apply similarity measures using the Smith Waterman distance
from __future__ import print_function
from nltk.metrics import *
training='PERSON OTHER PERSON OTHER OTHER ORGANIZATION'.split()
testing='PERSON OTHER OTHER OTHER OTHER OTHER'.split()
print(accuracy(training,testing))

trainset=set(training)
testset=set(testing)
precision(trainset,testset)

print(recall(trainset,testset))

print(f_measure(trainset,testset))
